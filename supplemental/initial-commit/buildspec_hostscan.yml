version: 0.2
phases:
  pre_build:
    commands:
    - apt-get update
    - apt-get install -y curl 
    - curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
    - dpkg -i session-manager-plugin.deb
    - apt-get install -y jq
    - apt-get update -q
    - apt-get install -y jo
  build:
    commands: 
    - rm -f temp_script
    - touch temp_script
    - echo "#bin/bash" >> temp_script
    - echo "INSTANCE_ID=$INSTANCE_ID" >> temp_script
    - echo "S3_BUCKET=$S3_BUCKET" >> temp_script
    - echo "FUNCTION_ARN=$FUNCTION_ARN" >> temp_script
    - echo 'aws ssm send-command --instance-ids $INSTANCE_ID --document-name "AWS-RunShellScript" --comment "git clone" --parameters commands="git clone https://github.com/docker/docker-bench-security.git" --output json' >> temp_script
    - echo 'JSON=$(aws ssm send-command --instance-ids $INSTANCE_ID --document-name "AWS-RunShellScript" --comment "run script" --parameters commands="cd docker-bench-security && sudo sh docker-bench-security.sh" --output-s3-bucket-name $S3_BUCKET --output json)' >> temp_script
    - echo 'COMMAND_ID=$(jq .Command.CommandId <<< "$JSON")' >> temp_script
    - echo 'COMMAND_ID="${COMMAND_ID%\"}"' >> temp_script
    - echo 'COMMAND_ID="${COMMAND_ID#\"}"' >> temp_script
    - echo 'JSON_RESPONSE=$(aws ssm get-command-invocation --command-id $COMMAND_ID --instance-id $INSTANCE_ID --output json)' >> temp_script
    - echo  'while [ $(jq -r '.Status' <<< "$JSON_RESPONSE" ) != "Success" ]; do sleep 1 && JSON_RESPONSE=$(aws ssm get-command-invocation --command-id $COMMAND_ID --instance-id $INSTANCE_ID --output json); done' >> temp_script
    - echo 'RAW_SCAN=$(jq .StandardOutputContent <<< "$JSON_RESPONSE" )' >> temp_script
    - echo 'JSON_REQUEST=$(jo -p command_id="$COMMAND_ID" instance_id="$INSTANCE_ID" raw_scan="$RAW_SCAN" s3_bucket="$S3_BUCKET")' >> temp_script
    - echo 'aws lambda invoke --function-name $FUNCTION_ARN --invocation-type RequestResponse --payload "$JSON_REQUEST" hostscanresults' >> temp_script
  post_build:
    commands:
    - bash temp_script
    - echo Build completed on `date`
